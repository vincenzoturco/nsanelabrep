/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TopFrame.java
 *
 * Created on 6-gen-2009, 12.44.01
 */
package org.nsanelab.dandy.ui.impl;

import java.awt.event.ActionEvent;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import org.nsanelab.dandy.domain.iface.IBaseDependency;
import org.nsanelab.dandy.domain.iface.IGenericComp;
import org.nsanelab.dandy.usecase.iface.IUIGraph;
import org.nsanelab.dandy.usecase.impl.ExportImage;
import org.nsanelab.dandy.usecase.impl.NW70Graph;

import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;

/**
 * 
 * @author vin
 */
public class TopFrame extends javax.swing.JFrame {

	/** Creates new form TopFrame */
	public TopFrame() {
		initComponents();
		genericUIInit();

	}

	public JTabbedPane getTabs() {
		return tabs;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        topFile = new javax.swing.JMenu();
        fileNew = new javax.swing.JMenu();
        fileNew70Graph = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        newSave = new javax.swing.JMenuItem();
        fileSaveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        fileExport = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        fileCloseAll = new javax.swing.JMenuItem();
        fileClose = new javax.swing.JMenuItem();
        topEdit = new javax.swing.JMenu();
        editRefresh = new javax.swing.JMenuItem();
        topHelp = new javax.swing.JMenu();
        helpManual = new javax.swing.JMenuItem();
        helpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topFile.setText("File");

        fileNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_action_filenew.png"))); // NOI18N
        fileNew.setText("New...");

        fileNew70Graph.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/sap.jpg"))); // NOI18N
        fileNew70Graph.setText("NW70 DC dependency graph");
        fileNew70Graph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileNew70GraphMouseClicked(evt);
            }
        });
        fileNew70Graph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNew70GraphActionPerformed(evt);
            }
        });
        fileNew.add(fileNew70Graph);

        topFile.add(fileNew);
        topFile.add(jSeparator1);

        newSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_device_floppy_unmount.png"))); // NOI18N
        newSave.setText("Save");
        topFile.add(newSave);

        fileSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_app_kfloppy.png"))); // NOI18N
        fileSaveAs.setText("Save As...");
        topFile.add(fileSaveAs);
        topFile.add(jSeparator2);

        fileExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_app_kpaint.png"))); // NOI18N
        fileExport.setText("Export...");
        fileExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileExportActionPerformed(evt);
            }
        });
        topFile.add(fileExport);
        topFile.add(jSeparator3);

        fileCloseAll.setText("Close");
        topFile.add(fileCloseAll);

        fileClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_action_exit.png"))); // NOI18N
        fileClose.setText("Close All");
        topFile.add(fileClose);

        jMenuBar1.add(topFile);

        topEdit.setText("Edit");

        editRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_action_reload.png"))); // NOI18N
        editRefresh.setText("Refresh");
        editRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRefreshActionPerformed(evt);
            }
        });
        topEdit.add(editRefresh);

        jMenuBar1.add(topEdit);

        topHelp.setText("Help");

        helpManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_app_khelpcenter.png"))); // NOI18N
        helpManual.setText("User Guide");
        topHelp.add(helpManual);

        helpAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nsanelab/dandy/ui/impl/icons/32px-Crystal_Clear_action_bookmark.png"))); // NOI18N
        helpAbout.setText("About");
        topHelp.add(helpAbout);

        jMenuBar1.add(topHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void genericUIInit() {
		this.setTitle("Dependency graph generator");
		this.graphs = new LinkedHashSet<IUIGraph>();
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Dimension screenSize = toolkit.getScreenSize();
		int x = (screenSize.width - this.getWidth()) / 2;
		int y = (screenSize.height - this.getHeight()) / 2;
		this.setLocation(x, y);
	}
/**
 * Refreshed the graph at the specified index
 * @param idx the index of the tab where the graph to be refreshed is located
 */
	public void refreshGraphAt(int idx) {
		IUIGraph[] graphArray;
		IUIGraph graph;
		JComponent renderedGraph;
		String title;
		
		graphArray = this.graphs.toArray(new IUIGraph[0]);
		graph = graphArray[idx];
		renderedGraph = graph.refreshGraph();
		
		title = this.tabs.getTitleAt(idx);
		this.tabs.remove(idx);
		this.tabs.add(renderedGraph, idx);
		this.tabs.setTitleAt(idx, title);
	}

	private void fileNew70GraphMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_fileNew70GraphMouseClicked
		// TODO add your handling code here:
	}// GEN-LAST:event_fileNew70GraphMouseClicked

	private void fileNew70GraphActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fileNew70GraphActionPerformed
		// TODO add your handling code here:
		IUIGraph newGraph;
		newGraph = new NW70Graph(this);
		this.graphs.add(newGraph);
		newGraph.doGraph();
		// return retVal;

	}// GEN-LAST:event_fileNew70GraphActionPerformed

	private void editRefreshActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editRefreshActionPerformed
		// TODO add your handling code here:
		int currentTabIdx;
		currentTabIdx = this.tabs.getSelectedIndex();
		refreshGraphAt(currentTabIdx);
		this.tabs.setSelectedIndex(currentTabIdx);

	}// GEN-LAST:event_editRefreshActionPerformed

	private void fileCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fileCloseActionPerformed
		// TODO add your handling code here:
		Component toRemove = this.getTabs().getSelectedComponent();
		this.getTabs().remove(toRemove);

	}// GEN-LAST:event_fileCloseActionPerformed

	private void fileExportActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fileExportActionPerformed
		// TODO add your handling code here:
		new ExportImage(this).doUseCase();
	}// GEN-LAST:event_fileExportActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

		} catch (Exception e) {
			e.printStackTrace();
		}
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {

				new TopFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem editRefresh;
    private javax.swing.JMenuItem fileClose;
    private javax.swing.JMenuItem fileCloseAll;
    private javax.swing.JMenuItem fileExport;
    private javax.swing.JMenu fileNew;
    private javax.swing.JMenuItem fileNew70Graph;
    private javax.swing.JMenuItem fileSaveAs;
    private javax.swing.JMenuItem helpAbout;
    private javax.swing.JMenuItem helpManual;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JMenuItem newSave;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JMenu topEdit;
    private javax.swing.JMenu topFile;
    private javax.swing.JMenu topHelp;
    // End of variables declaration//GEN-END:variables
	/**
	 * @uml.property name="graphs"
	 */
	private Set<IUIGraph> graphs;

	/**
	 * Getter of the property <tt>graphs</tt>
	 * 
	 * @return Returns the graphs.
	 * @uml.property name="graphs"
	 */
	public Set<IUIGraph> getGraphs() {
		return graphs;
	}

	/**
	 * Setter of the property <tt>graphs</tt>
	 * 
	 * @param graphs
	 *            The graphs to set.
	 * @uml.property name="graphs"
	 */
	public void setGraphs(Set<IUIGraph> graphs) {
		this.graphs = graphs;
	}
}
